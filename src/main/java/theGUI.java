
import com.google.api.client.http.FileContent;
import com.google.api.services.drive.Drive;
import com.google.api.services.drive.model.File;
import com.google.api.client.util.DateTime;
import java.io.IOException;
import java.util.Collections;
import java.util.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author cerva
 */
public class theGUI extends javax.swing.JFrame {

    /**
     * Creates new form theGUI
     */
    ListOfFiles lof;
    String folderID;
    Drive service;

    public theGUI(ListOfFiles lof, String folderID, Drive service) {
        initComponents();
        this.lof = lof;
        this.folderID = folderID;
        this.service = service;
        this.setVisible(true);
        this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addNewFileBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addNewFileBtn.setText("Add New File");
        addNewFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewFileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(addNewFileBtn)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(addNewFileBtn)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewFileBtnActionPerformed
        // TODO add your handling code here:
        OpenDialog od = new OpenDialog();
        String pathToFile = od.showOpenDialog();
        lof.addNewFile(pathToFile);
        //uploadFile();

        /////* insert a file into a folder */////
        //Need to overwrite cloud copies instead of uploading another version
        //also save this filepath to documments.txt
        
        
        try {
            //java.io.File filePath = new java.io.File("C:\\Users\\cerva\\Documents\\Projects\\DriveDocumentBackup\\src\\main\\test files\\Avengers Infinity War.mp4");
            System.out.println("Path to file is " + pathToFile);
            java.io.File filePath = new java.io.File(pathToFile);
            String[] pathAsAnArray = pathToFile.split("\\\\");
            File fileMetadata = new File();

            fileMetadata.setName(pathAsAnArray[pathAsAnArray.length - 1]);
            fileMetadata.setParents(Collections.singletonList(folderID));

            //Arg 1 is a MIME type
            FileContent mediaContent = new FileContent("text/plain", filePath);
            File file = service.files().create(fileMetadata, mediaContent)
                    .setFields("id, parents, modifiedTime")
                    .execute();
            System.out.println("File ID: " + file.getId());
            
            
            //this is in datetime
            System.out.println("Date Modified On Drive: " + file.getModifiedTime());
            //this is a long
            long lastModifiedOnDisk = (new java.io.File(pathToFile).lastModified());
            //DateTime constructor for long
            System.out.println("Date modified On Local: " + new DateTime(lastModifiedOnDisk) );
            
            
            
        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_addNewFileBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(theGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(theGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(theGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(theGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new theGUI(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewFileBtn;
    // End of variables declaration//GEN-END:variables
}
